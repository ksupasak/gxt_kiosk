
<style>
body{
	background:black;
}
.container{
	background:black;
}
.station .label{
	font-size:0.8em;

}
.station .value{
	font-size:1.5em;
	margin-top:0px;
	padding-top:0px;
	text-align:center;
}
.station .pr{color:#01bf02;

}

.station .bp{color:#5990b7;;

}

.station .spo2{color:#bcaf06;

}

.station .temp{color:#2F50E2;

}

.station .rr{color:#b7851d;

}
.station .col-6{
		border:1px solid #333;
		border-radius: 5px;
}

.station .cc{
	color:#00b3b7;

}
.station .uc{
	color:#f937e2;

}
.btn {
	color:#eee; 
}
</style>

<%
	station = Station.find params[:id]
	
	admit = station.admits.where(:status=>'Admitted').last
		

	
%>
<div id="panel" class="row" style="border:0px solid blue;background:#111;color:#eee">

<% 1.times do |i| 
	i = station.name
	%>

<div id="<%=station%>"  class=" col-12 station active-station " style="border-right:1px solid #888">
	<div class="row" style="background:#666">
		
		<div class="col-2 text-left ">
		<%= link_to station.name,"../Station/show?id=#{station.id}",:class=>'btn' %>
		</div>
		<div class="col-7 text-center">
			<%
			
			if admit
				patient = admit.patient
			
			%>
			<%= link_to "#{patient.name} (#{patient.hn})","../Admit/show?id=#{admit.id}", :class=>'btn'%>
			<% end %> 	
	
		</div>
		<div class="col-3">
			
		<%= link_to "","../Station/show?id=#{station.id}",:class=>'btn hn' %>
		
		</div>
		
			
	</div>
	<div  class="row align-items-start">
		<div class="col-lg-6 order-lg-1 order-1">
			<div class="row">
						<div class="col-6 pr">
							<span class="label">PR</span>
							<div class="value">-</div>
						</div>
						<div class="col-6 bp">
							<span class="label">BP</span>
							<div class="value">-</div>
						</div>
			</div>
			<div class="row">
							<div class="col-6 temp">
								<span class="label">Temp</span>
								<div class="value">-</div>
							</div>
							<div class="col-6 rr">
								<span class="label">RR</span>
								<div class="value">-</div>
							</div>
			</div>
		
			<div class="row">
						<div class="col-6 spo2">
							<span class="label">SpO2</span>
							<div class="value">-</div>
						</div>
						<div class="col-6 rr">
						
						</div>				
			</div>
		
			<div class="row">
						<div class="col-6 cc">
						    <span class="label">LC</span>
							<div class="value">-</div> 
						</div>
						<div class="col-6 uc">
							<span class="label">UO</span>
							<div class="value">-</div>
						</div>
			</div>
		</div>
		<div class="col-lg-6 order-lg-2 order-2 " style="border:1px solid #333;border-radius: 5px;">
			<div class="row">
					<div class="col-6 score" style="border:0px solid blue;text-align:center">
							<%

							if admit
								patient = admit.patient

							%>
							<span><%=admit.score%></span>
							<%else %><span>&nbsp;</span>
							<% end %>
						<div class="value" style='font-size:4em;'>
						- 
						</div>
						
					</div>
					
					<div class="col-6" style="border:0px solid blue;">

						
					</div>
					
					
			</div>
			<div class="row text-center">
				
			</div>
			
			<div class="row">
				<div id="result" class= "col-lg-12 order-lg-4 order-4">

				</div>
			</div>
		</div>
		
		<div class="col-lg-6 order-lg-3 order-3">
		
		<% 4.times do |w| %>
		<div class="row">
		<div class="col-sm-1 ">
		L<%=w+1%>
		</div>
		
		<div id="wave-<%=i%>" class="col-lg-11 order-lg-3 order-3" style="min-height:5em;background:#111">
		
		</div>
		
		</div>
		
		<% end %>
		</div>
		

	</div>

</div>

<% end %>

</div>


<%
   record =  this.model.find params[:id]
if record  
%>

<% end %><hr/>

<%=link_to 'Edit', "edit?id=#{params[:id]}",:class=>'btn btn-info'%>
<%=link_to 'Back', 'index',:class=>'btn'%>

	<span class="col-sm-12 msg"></span>	

		<script type="text/javascript">
	    

			$(document).ready(function(){
				
				
					
			function genData(data){
			
				scale = 50;
			
				for(var i=0;i<20;i++){
					r = Math.random();
					v = Math.sin(360/20*i*Math.PI/180)*(scale*r)+50;
					data.push(v);
				}
			
			}
	    
	
			function aniLine(idx, sampling, rawdata, last){

			var w = 50;
		    var h = 80;
			var svg;


		      svg = d3.select("#"+idx)
		      .append("svg")
		      .attr("width", w)
		      .attr("height", h)
		      .attr("id", "visualization");

	    
			// svgo.selectAll("path.old").remove();
			// svgo.selectAll("path").attr("class", "old");


		    var x = d3.scaleLinear().domain([0, sampling]).range([0, w]);
		    var y = d3.scaleLinear().domain([0, 100]).range([10, h - 10]);

		    var line = d3.line()
		      .x(function(d,i) {return x(i);})
		      .y(function(d) {return y(d);})
		      .curve(d3.curveNatural)

		    // data is created inside the function so it is always unique
		    let repeat = () => {
		      var data = rawdata //d3.range(101).map(function(){return Math.random()*100})

		      // Uncomment following line to clear the previously drawn line
		      //svg.selectAll("path").remove();

		      // Set a light grey class on old paths
	     
		      svg.selectAll("path").remove();
		      // var last_path = svg.append("path")
		      // 		      .attr("d", line(last))
		      // 		      .attr("stroke", "#131")
		      // 		      .attr("stroke-width", "2")
		      // 		      .attr("fill", "none")
		      // 		      .attr("class", "old");
		      // 		      last_path.add

		      var path = svg.append("path")
		        .attr("d", line(data))
		        .attr("stroke", "green")
		        .attr("stroke-width", "2")
		        .attr("fill", "none");

		      var totalLength = path.node().getTotalLength();

		      path
		        .attr("stroke-dasharray", totalLength + " " + totalLength)
		        .attr("stroke-dashoffset", totalLength)
		        .transition()
		          .duration(1000)
		          .ease(d3.easeLinear)
		          .attr("stroke-dashoffset", 0)
		          // .on("end", repeat);
		    };
		    repeat();
			}
		
			// aniLine('line1')
			// aniLine('line2')
			// aniLine('line3')
			// aniLine('line4')
	
		
		
			function showWave(div,data){
			var n = 32; // sample for a second
		    var cut = 1;
			var show = 8; //second
			var second = 0;
			var lastdata = [];
		
			var intervalID = setInterval(function(){
				if(second%show==show-1){
					
					$('#'+div).html("");
					
				}
					// genData(data);
					if(second%cut==cut-1&&second<1000){
					
						rawdata = data.splice(0,cut*n+1);
						data.unshift(rawdata[rawdata.length-1]);
						
						aniLine(div,n ,rawdata,lastdata);
						lastdata = rawdata;
						// second = 0 ;
					}
					
					second+=1;
			}, 1000);
		
		
		   }
		   


		   var wave_data = [];
			
		<% for i in settings.stations.keys.sort %>
		  showWave('wave-<%=i%>',wave_data);
		
	    <% end %>
	
	
			// showWave('line2',[]);
			// showWave('line3',[]);
			// showWave('line4',[]);
			//
		
		
		
		

	
	var show = function(el){
     return function(msg){ el.innerHTML = msg  }
   }(document.getElementById('msgs'));
	
	
	  var ws       = new WebSocket('ws://' + window.location.host + "<%='/miot/Home/index'%>");
	
	  var plot_pos = {};
	
   ws.onopen    = function()  { show('websocket opened'); 
	
	  	ws.send('WS.Select name=<%=session.id%>\n["ZoneUpdate zone_id=*","Alert station_id=*","Data.Image station_id=*"]')

	  };
   ws.onclose   = function()  { show('websocket closed'); 
		
	 	setTimeout(function () {
	 		       // window.location.href = "index"; //will redirect to your blog page (an ex: blog.html)
	 		    }, 2000); //will call the function after 2 secs.
	 		

   }
   ws.onmessage = function(m) { 
	
		active = $('.active-station').size()
	
		show(''+m.data)
		
		lines = m.data.split("\n")
		
		// console.log(lines[0].split(" ")[0])
		if(lines[0].split(" ")[0]=='Alert'){
			data = JSON.parse(lines[1])
			
			// alert(data['alert'])
			
			$('#'+data['station']).addClass('bp_alert_2');
			$('#'+data['station']+' .msg').html(data['alert']);
			
			// play sound
			ion.sound.play("bell_ring");
			
		}else
		if(lines[0].split(" ")[0]=='Data.Image'){
		
			lines.shift()
			img = lines.join("")
			// alert('image '+m.data.length)
			
			$("#image").attr('src','data:image/jpg;base64,'+ JSON.parse(img))
			
			
		}
		else
		if(lines[0].split(" ")[0]=='ZoneUpdate'){
		
	
		data = JSON.parse(lines[1])
			// 
			// if(data['list'].length!=active)
			// window.location.href = "index"; 
			
		$('#timer').html(data['time'])
		for(var id in data['list']){
			i = data['list'][id]
			
			if($('#'+i).length > 0){ 
			obj = data['data'][i]
				
			
		  if(obj['wave']){	
			  
			    // wave_data.push(obj['wave']);
		   		// wave_data = wave_data.concat(obj['wave']);
				for(var j=0;j<obj['wave'].length;j++){
					wave_data.push(obj['wave'][j]);
				}
				// console.log(wave_data);
				// wave_data = obj['wave'];
		   }
		    			
			
			 // console.log(obj)
			$('#'+i+' .hn').html(obj['ref'])
			
			if($('#'+i+' .bp').html()!=obj['bp']){
				$('#'+i).addClass('bp_alert');
				$('#'+i).removeClass('bp_alert_2');
				$('#'+i+' .msg').html("-");
			}else{
				$('#'+i).removeClass('bp_alert');
				// $('#'+i).removeClass('bp_alert_2');
				// $('#'+i+' .msg').html("-");
			}
			
			$('#'+i+' .bp .value').html(obj['bp'])
			
			$('#'+i+' .temp .value').html(obj['temp'])
			
			$('#'+i+' .pr .value').html(obj['pr'])
			$('#'+i+' .rr .value').html(obj['rr'])
			$('#'+i+' .spo2 .value').html(obj['spo2'])
			
			
			$('#'+i+' .score .value').html(obj['score'])
			
			
			
			
			}else{
					setTimeout(function () {
				       // window.location.href = "show?id=<%=params[:id]%>"; //will redirect to your blog page (an ex: blog.html)
				    }, 2000); //will call the function after 2 secs.
				
			}
			
		}
		 }
	 };

   // var sender = function(f){
   //      var input     = document.getElementById('input');
   //      input.onclick = function(){ input.value = "" };
   //      f.onsubmit    = function(){
   //        ws.send(input.value);
   //        input.value = "send a message";
   //        return false;
   //      }
   //    }(document.getElementById('form'));
   // 	
	
	
	$('.ctl').each(function(){
		
		obj = $(this)
		
		obj.click(function(){
			o = $(this)
			 ws.send(o.attr('id'));
		})
		
	})

	})


	// init bunch of sounds
	ion.sound({
	    sounds: [
	        {name: "bell_ring"}
	    ],

	    // main config
	    path: "<%=url_for 'sounds/'%>",
	    preload: true,
	    multiplay: true,
	    volume: 0.9
	});

	$('#search-form').submit(function(event){
		
		hn = $('#search').val()
		
		
		$.ajax({
		  url: "patient?station_id=<%=station.id%>&hn="+hn,
		  context: document.body
		}).done(function(data) {
		  
		$('#result').html(data)
		
		
		});
		
		$('#search').val("");
		event.preventDefault();
	})	
	

</script>	<i style="color:#666">  <div id="msgs" style="font-size:0.8em"></div></i>
<%= inline(this,:'../home/_scoring') %>



<div class="modal fade" id="admit-modal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true" style="color:black">
  <div class="modal-dialog modal-dialog-centered" role="document">
    <div class="modal-content">
      
    </div>
  </div>
</div>
<script>

function call_admit(){
	$.ajax({
	  url: "../Admit/admiting?id=<%=station.name%>",
	  context: document.body
	}).done(function(data) {
	  $('.modal-content').html(data);
	  $('#admit-modal').modal({
	    backdrop: 'static',
	    keyboard: false
	})
	});
}
<% if admit %>		
		$.ajax({
		  url: "patient?station_id=<%=station.id%>&hn=<%=admit.patient.hn%>",
		  context: document.body
		}).done(function(data) {
				$('#result').html(data)


				});
				<% end %>
			
</script>